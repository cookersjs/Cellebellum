## This program and the accompanying materials are made available under the terms of the GNU Public
## License v3.0. You should have received a copy of the GNU General Public License along with this
## program. If not, see <http://www.gnu.org/licenses/>.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
## IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
## FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
## DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
## DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
## WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
## WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- name: clean {{ tmp }}
  file:
    state: absent
    path: "{{ tmp }}"

- name: bring the front-end together in {{ tmp }} using {{ webpack }} file
  shell: NODE_ENV=production webpack --config {{ webpack }}

- name: copy backend-end scripts from {{ webapp }}
  shell: coffee -c -o {{ tmp }} {{ webapp }}/service {{ webapp }}/common

- name: copy reporting scripts from {{ reporting }}
  shell: cp -r {{ reporting }} {{ tmp }}

- name: copy searching scripts from {{ searching }}
  shell: cp -r {{ searching }} {{ tmp }}

- name: copy scripts from {{ scripts }}
  shell: cp -r {{ scripts }} {{ tmp }}

- name: we need some additional backend styling
  shell: mkdir -p {{ tmp }}/reporting/css &&
    cp node_modules/bootstrap/dist/css/bootstrap.css {{ tmp }}/reporting/css

- name: copy over the package.json
  shell: cp package.json {{ tmp }}/package.json

- name: copy other dist and configuration files
  shell: cp {{ dist }}/Dockerfile {{ tmp }} &&
    cp {{ config }}/production.json {{ tmp }}

- name: create a docker container out of everything
  shell: mkdir -p {{ build }} &&
    docker build -t {{ image_name }} {{ tmp }} --no-cache

- name: save the docker image to dist and remove it
  shell: docker save -o {{ build }}/webapp_production {{ image_name }}:latest &&
    docker rmi {{ image_name }}

- name: clean {{ tmp }}
  file:
    state: absent
    path: "{{ tmp }}"
